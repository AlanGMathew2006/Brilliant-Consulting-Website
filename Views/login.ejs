<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Brilliant Consulting - Login</title>
  <link rel="stylesheet" href="/style.css" />
  <link rel="stylesheet" href="/css/footer.css" />
 
</head>

<body class="login-page">
  <canvas id="particle-bg"></canvas>
  <header>
    <div class="logo">Brilliant <span>Consulting</span></div>
    <nav>
      <a href="/services">Services</a>
      <a href="/about">About</a>
      <a href="/contact">Contact</a>
      <a href="/signup">Sign Up</a>
    </nav>
  </header>
  <div class="hero-section login-page">
    <div class="content">
      <div class="left">
        <h1>Welcome to <span>Brilliant</span> Consulting</h1>
        <p>
          Empowering businesses with cutting-edge technology solutions and strategic consulting services.
          Transform your digital landscape with our expert guidance.
        </p>
        <button onclick="window.location.href='/services'">Explore Our Services</button>
      </div>

      <div class="right">
        <div class="form-container">
          <h2>LOG IN</h2>
          <% if (error) { %>
            <div class="error-message">
              <%= error %>
            </div>
          <% } %>
          <form action="/auth/login" method="POST">
            <label class="form-label" for="username">Username</label>
            <input type="text" name="userName" placeholder="Username" required />
            <label class="form-label" for="password">Password</label>
            <input type="password" name="password" placeholder="Password" required />
            <button type="submit">Log In</button>
          </form>
          <p>Don't have an account? <a href="/signup">Sign up here</a></p>
        </div>
      </div>
    </div>
  </div>

  <!-- Include Footer -->
  <%- include('partials/footer') %>

  <script>
    // SaaS-style animated particles
    const canvas = document.getElementById('particle-bg');
    const ctx = canvas.getContext('2d');
    let particles = [];
    const colors = ['#4DB8FF', '#00eaff', '#fff', '#b3e6ff', '#1a5a99'];
    const particleCount = 90;

    function resizeCanvas() {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    }
    window.addEventListener('resize', resizeCanvas);
    resizeCanvas();

    function randomBetween(a, b) {
      return a + Math.random() * (b - a);
    }

    function createParticle() {
      return {
        x: randomBetween(0, canvas.width),
        y: randomBetween(0, canvas.height),
        r: randomBetween(2, 4.5),
        color: colors[Math.floor(Math.random() * colors.length)],
        vx: randomBetween(-0.7, 0.7),
        vy: randomBetween(-0.7, 0.7),
        alpha: randomBetween(0.5, 1),
        glow: Math.random() > 0.7
      };
    }

    function initParticles() {
      particles = [];
      for (let i = 0; i < particleCount; i++) {
        particles.push(createParticle());
      }
    }

    function drawParticles() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      // Draw lines between close particles
      for (let i = 0; i < particles.length; i++) {
        let p = particles[i];
        ctx.save();
        ctx.globalAlpha = p.alpha;
        if (p.glow) {
          ctx.shadowColor = p.color;
          ctx.shadowBlur = 16;
        }
        ctx.beginPath();
        ctx.arc(p.x, p.y, p.r, 0, Math.PI * 2);
        ctx.fillStyle = p.color;
        ctx.fill();
        ctx.restore();
        // Draw lines to nearby particles
        for (let j = i + 1; j < particles.length; j++) {
          let q = particles[j];
          let dx = p.x - q.x;
          let dy = p.y - q.y;
          let dist = Math.sqrt(dx * dx + dy * dy);
          if (dist < 110) {
            ctx.save();
            ctx.globalAlpha = 0.10;
            ctx.strokeStyle = "#4DB8FF";
            ctx.lineWidth = 1.2;
            ctx.beginPath();
            ctx.moveTo(p.x, p.y);
            ctx.lineTo(q.x, q.y);
            ctx.stroke();
            ctx.restore();
          }
        }
      }
      ctx.globalAlpha = 1;
    }

    function updateParticles() {
      for (let p of particles) {
        p.x += p.vx;
        p.y += p.vy;
        if (p.x < 0 || p.x > canvas.width) p.vx *= -1;
        if (p.y < 0 || p.y > canvas.height) p.vy *= -1;
      }
    }

    function animate() {
      drawParticles();
      updateParticles();
      requestAnimationFrame(animate);
    }

    initParticles();
    animate();
  </script>
</body>
</html>
