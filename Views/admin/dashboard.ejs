<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Dashboard - Brilliant Consulting</title>
  <link rel="stylesheet" href="/style.css">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css?family=Montserrat:700,800,900&display=swap" rel="stylesheet">
</head>
<body class="admin-dashboard-page">
  <header class="admin-header">
    <div class="logo">Brilliant <span style="color:#4DB8FF;">Consulting</span></div>
    <nav>
      <a href="/admin" class="nav-link">Dashboard</a>
      <a href="/auth/logout" class="nav-link logout-btn">Logout</a>
    </nav>
  </header>

  <div class="admin-dashboard-container">
    <!-- Sidebar Navigation -->
    <nav class="admin-sidebar">
      <ul>
        <li><a href="#stats-section" class="sidebar-link">Stats</a></li>
        <li><a href="#recent-appointments" class="sidebar-link">Recent Appointments</a></li>
        <li><a href="#user-management" class="sidebar-link">User Management</a></li>
        <li><a href="#appointment-management" class="sidebar-link">Appointment Management</a></li>
        <li><a href="#analytics-section" class="sidebar-link">Analytics</a></li>
      </ul>
    </nav>

    <!-- Main Content -->
    <main class="admin-main-content">
      <div class="dashboard-header">
        <h1>Admin Dashboard</h1>
        <p>Welcome to the admin control panel!</p>
      </div>
      
      <!-- Stats Cards -->
      <div class="stats-section" id="stats-section">
        <h2>Key Metrics</h2>
        <div class="stats-grid">
          <!-- Total Users Card -->
          <div class="stat-card">
            <div class="stat-icon">
              <i class="fas fa-users"></i>
            </div>
            <div class="stat-content">
              <h3>TOTAL USERS</h3>
              <div class="stat-number" data-count="<%= stats.totalUsers %>"><%= stats.totalUsers %></div>
              <p>Registered accounts</p>
            </div>
          </div>

          <!-- Total Appointments Card -->
          <div class="stat-card">
            <div class="stat-icon">
              <i class="fas fa-calendar-alt"></i>
            </div>
            <div class="stat-content">
              <h3>TOTAL APPOINTMENTS</h3>
              <div class="stat-number" data-count="<%= stats.totalAppointments %>"><%= stats.totalAppointments %></div>
              <p>All appointments</p>
            </div>
          </div>

          <!-- Booked Appointments Card -->
          <div class="stat-card">
            <div class="stat-icon">
              <i class="fas fa-calendar-check"></i>
            </div>
            <div class="stat-content">
              <h3>BOOKED APPOINTMENTS</h3>
              <div class="stat-number" data-count="<%= stats.bookedAppointments %>"><%= stats.bookedAppointments %></div>
              <p>Confirmed bookings</p>
            </div>
          </div>

          <!-- Canceled Appointments Card -->
          <div class="stat-card">
            <div class="stat-icon">
              <i class="fas fa-calendar-times"></i>
            </div>
            <div class="stat-content">
              <h3>CANCELED APPOINTMENTS</h3>
              <div class="stat-number" data-count="<%= stats.canceledAppointments %>"><%= stats.canceledAppointments %></div>
              <p>Cancelled bookings</p>
            </div>
          </div>

          <!-- Completed Appointments Card -->
          <div class="stat-card">
            <div class="stat-icon">
              <i class="fas fa-calendar-check"></i>
            </div>
            <div class="stat-content">
              <h3>COMPLETED APPOINTMENTS</h3>
              <div class="stat-number" data-count="<%= stats.completedAppointments %>"><%= stats.completedAppointments %></div>
              <p>Finished bookings</p>
            </div>
          </div>
        </div>
      </div>

      <!-- Recent Appointments Table -->
      <section class="dashboard-section" id="recent-appointments">
        <h2 class="dashboard-title">Recent Appointments</h2>
        <table class="dashboard-table">
          <thead>
            <tr>
              <th>User</th>
              <th>Date</th>
              <th>Time Slot</th>
              <th>Type</th>
              <th>Status</th>
            </tr>
          </thead>
          <tbody>
            <% recentAppointments.forEach(function(app) { %>
              <tr>
                <td><%= app.user && app.user.fullName ? app.user.fullName : 'No Name' %></td>
                <td><%= app.date %></td>
                <td><%= app.timeSlot %></td>
                <td><%= app.consultationType %></td>
                <td>
                  <span class="status <%= app.status || '' %>">
  <%= app.status ? (app.status.charAt(0).toUpperCase() + app.status.slice(1)) : 'N/A' %>
</span>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </section>

      <!-- User Management -->
      <section class="dashboard-section" id="user-management">
        <h2 class="dashboard-title">User Management</h2>
        <table class="dashboard-table">
          <thead>
            <tr>
              <th>User Name</th>
              <th>Email</th>
              <th>Role</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% users.forEach(function(user) { %>
              <tr>
                <td><%= user.userName %></td>
                <td><%= user.email %></td>
                <td><%= user.role %></td>
                <td>
                  <button class="dashboard-btn edit-user-btn"
    data-id="<%= user._id %>"
    data-fullname="<%= user.fullName %>"
    data-email="<%= user.email %>"
    data-phonenumber="<%= user.phoneNumber %>"
    data-companyname="<%= user.companyName %>"
    data-serviceinterest="<%= user.serviceInterest %>"
    data-projectdescription="<%= user.projectDescription %>"
    data-role="<%= user.role %>"
    data-notes="<%= user.notes ? user.notes.replace(/"/g, '&quot;') : '' %>">
    <i class="fas fa-edit"></i> Edit
  </button>
  <button class="dashboard-btn danger delete-user-btn" data-id="<%= user._id %>">
    <i class="fas fa-trash"></i> Delete
  </button>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </section>

      <!-- Appointment Management -->
      <section class="dashboard-section" id="appointment-management">
        <h2 class="dashboard-title">Appointment Management</h2>
        <table class="dashboard-table">
          <thead>
            <tr>
              <th>User</th>
              <th>Date</th>
              <th>Time Slot</th>
              <th>Status</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% allAppointments.forEach(function(app) { %>
              <tr>
                <td><%= app.user && app.user.fullName ? app.user.fullName : 'No Name' %></td>
                <td><%= app.date %></td>
                <td><%= app.timeSlot %></td>
                <td>
                  <span class="status <%= app.status %>"><%= app.status.charAt(0).toUpperCase() + app.status.slice(1) %></span>
                </td>
                <td>
                  <button class="dashboard-btn complete-user-btn" data-id="<%= app._id %>">
  <i class="fas fa-check"></i> Complete
</button>
<button class="dashboard-btn danger cancel-user-btn" data-id="<%= app._id %>">
  <i class="fas fa-times"></i> Cancel
</button>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </section>

      <!-- Basic Analytics -->
      <section class="dashboard-section analytics-section" id="analytics-section">
        <h2 class="dashboard-title">Analytics</h2>
        <div class="analytics-cards">
          <div class="analytics-card">
            <h3>Appointments This Month</h3>
            <div class="analytics-value" style="color:#4DB8FF;"><%= stats.thisMonthAppointments %></div>
          </div>
          <div class="analytics-card">
            <h3>New Users This Month</h3>
            <div class="analytics-value" style="color:#4DB8FF;"><%= stats.thisMonthUsers %></div>
          </div>
        </div>
        <!-- Chart.js example (optional) -->
        <canvas id="appointmentsChart" width="400" height="120"></canvas>
      </section>
    </main>
  </div>

  <!-- Delete User Modal -->
  <div id="deleteUserModal" class="modal-overlay" style="display:none;">
  <div class="modal-box" style="max-width:400px;">
    <h3 style="margin-bottom:1.2rem;">
      <i class="fas fa-user-times" style="color:#e74c3c;margin-right:0.5rem;"></i>
      Delete User?
    </h3>
    <p>Are you sure you want to delete this user? <span style="color:#e74c3c;font-weight:600;">This action cannot be undone.</span></p>
    <div style="display:flex;justify-content:flex-end;gap:1rem;margin-top:2rem;">
      <button id="cancelDeleteUser" class="modal-btn cancel" type="button">Cancel</button>
      <button id="confirmDeleteUser" class="modal-btn danger" type="button">Delete</button>
    </div>
  </div>
</div>

  <!-- Edit User Modal -->
  <div id="editUserModal" class="modal-overlay" style="display:none;">
  <div class="modal-box">
    <div class="modal-icon">
      <i class="fas fa-user-edit"></i>
    </div>
    <h2>Edit User</h2>
    <form id="editUserForm" autocomplete="off">
      <input type="hidden" id="editUserId">
      <div class="modal-row">
        <div class="modal-col">
          <div class="modal-field">
            <label for="editFullName">Full Name <span style="color:#e74c3c;">*</span></label>
            <input type="text" id="editFullName" required>
          </div>
          <div class="modal-field">
            <label for="editEmail">Email Address <span style="color:#e74c3c;">*</span></label>
            <input type="email" id="editEmail" required>
          </div>
          <div class="modal-field">
            <label for="editPhoneNumber">Phone Number <span style="color:#e74c3c;">*</span></label>
            <input type="text" id="editPhoneNumber" required>
          </div>
          <div class="modal-field">
            <label for="editCompanyName">Company Name</label>
            <input type="text" id="editCompanyName">
          </div>
        </div>
        <div class="modal-col">
          <div class="modal-field">
            <label for="editServiceInterest">Service Interest <span style="color:#e74c3c;">*</span></label>
            <select id="editServiceInterest" required>
              <option value="">Select Service</option>
              <option value="Consulting">Consulting</option>
              <option value="Development">Development</option>
              <option value="Data Analytics">Data Analytics</option>
              <option value="Other">Other</option>
            </select>
          </div>
          <div class="modal-field">
            <label for="editProjectDescription">Brief Project Description</label>
            <textarea id="editProjectDescription" rows="3"></textarea>
          </div>
          <div class="modal-field">
            <label for="editRole" style="color:#4DB8FF;">Role <span style="color:#e74c3c;">*</span></label>
            <select id="editRole" required>
              <option value="user">User</option>
              <option value="admin">Admin</option>
            </select>
          </div>
          <div class="modal-field">
            <label for="editNotes">Admin Notes</label>
            <textarea id="editNotes" rows="2" placeholder="Add special notes for this user..."></textarea>
          </div>
        </div>
      </div>
      <div class="modal-actions">
        <button type="button" id="resetPasswordBtn" class="modal-btn reset">Reset Password</button>
        <div style="display:flex;gap:0.7rem;">
          <button type="button" id="cancelEditUser" class="modal-btn cancel">Cancel</button>
          <button type="submit" class="modal-btn save">Save Changes</button>
        </div>
      </div>
    </form>
  </div>
</div>

  <!-- Cancel Appointment Modal -->
  <div id="cancelUserModal" class="modal-overlay" style="display:none;">
  <div class="modal-box" style="max-width:400px;">
    <h3 style="margin-bottom:1.2rem;">Cancel Appointment?</h3>
    <p>Are you sure you want to cancel this appointment? This action cannot be undone.</p>
    <div style="display:flex;justify-content:flex-end;gap:1rem;margin-top:2rem;">
      <button id="cancelCancelUser" class="modal-btn" style="background:#e5e7eb;color:#1e293b;">No</button>
      <button id="confirmCancelUser" class="modal-btn danger" style="background:#e74c3c;">Yes, Cancel</button>
    </div>
  </div>
</div>

  <script>
    // Smooth number animation
    function animateNumbers() {
      document.querySelectorAll('.stat-number').forEach(numberElement => {
        const finalNumber = parseInt(numberElement.getAttribute('data-count'));
        let currentNumber = 0;
        const increment = finalNumber / 80;
        const timer = setInterval(() => {
          currentNumber += increment;
          if (currentNumber >= finalNumber) {
            currentNumber = finalNumber;
            clearInterval(timer);
          }
          numberElement.textContent = Math.floor(currentNumber);
        }, 20);
      });
    }

    // Start animation when page loads
    window.addEventListener('load', () => {
      setTimeout(animateNumbers, 400);
    });

    document.querySelectorAll('.sidebar-link').forEach(link => {
      link.addEventListener('click', function(e) {
        e.preventDefault();
        document.querySelectorAll('.sidebar-link').forEach(l => l.classList.remove('active'));
        this.classList.add('active');
        const section = document.querySelector(this.getAttribute('href'));
        if(section) section.scrollIntoView({ behavior: 'smooth' });
      });
    });

    let userIdToDelete = null;

    document.querySelectorAll('.delete-user-btn').forEach(btn => {
      btn.addEventListener('click', function() {
        userIdToDelete = this.getAttribute('data-id');
        document.getElementById('deleteUserModal').style.display = 'flex';
      });
    });

    const cancelDeleteBtn = document.getElementById('cancelDeleteUser');
    if (cancelDeleteBtn) {
      cancelDeleteBtn.onclick = function() {
        document.getElementById('deleteUserModal').style.display = 'none';
        userIdToDelete = null;
      };
    }

    const confirmDeleteBtn = document.getElementById('confirmDeleteUser');
    if (confirmDeleteBtn) {
      confirmDeleteBtn.onclick = function() {
        if (!userIdToDelete) return;
        fetch(`/admin/user/${userIdToDelete}`, {
          method: 'DELETE',
          headers: { 'Content-Type': 'application/json' }
        })
        .then(res => res.json())
        .then(data => {
          document.getElementById('deleteUserModal').style.display = 'none';
          userIdToDelete = null;
          if (data.success) {
            location.reload();
          } else {
            alert('Failed to delete user.');
          }
        })
        .catch(() => {
          document.getElementById('deleteUserModal').style.display = 'none';
          userIdToDelete = null;
          alert('Failed to delete user.');
        });
      };
    }

    // Edit User functionality (no localStorage)
    let userIdToEdit = null;

    document.querySelectorAll('.edit-user-btn').forEach(btn => {
      btn.addEventListener('click', function() {
        userIdToEdit = this.getAttribute('data-id');
        document.getElementById('editUserId').value = userIdToEdit;
        document.getElementById('editFullName').value = this.getAttribute('data-fullname') || '';
        document.getElementById('editEmail').value = this.getAttribute('data-email') || '';
        document.getElementById('editPhoneNumber').value = this.getAttribute('data-phonenumber') || '';
        document.getElementById('editCompanyName').value = this.getAttribute('data-companyname') || '';
        document.getElementById('editServiceInterest').value = this.getAttribute('data-serviceinterest') || '';
        document.getElementById('editProjectDescription').value = this.getAttribute('data-projectdescription') || '';
        document.getElementById('editRole').value = this.getAttribute('data-role') || 'user';
        document.getElementById('editNotes').value = this.getAttribute('data-notes') || '';
        document.getElementById('editUserModal').style.display = 'flex';
      });
    });

    const cancelEditBtn = document.getElementById('cancelEditUser');
    if (cancelEditBtn) {
      cancelEditBtn.onclick = function() {
        document.getElementById('editUserModal').style.display = 'none';
        userIdToEdit = null;
      };
    }

    const editUserForm = document.getElementById('editUserForm');
    if (editUserForm) {
      editUserForm.onsubmit = function(e) {
        e.preventDefault();
        const id = document.getElementById('editUserId').value;
        const fullName = document.getElementById('editFullName').value;
        const email = document.getElementById('editEmail').value;
        const phoneNumber = document.getElementById('editPhoneNumber').value;
        const companyName = document.getElementById('editCompanyName').value;
        const serviceInterest = document.getElementById('editServiceInterest').value;
        const projectDescription = document.getElementById('editProjectDescription').value;
        const role = document.getElementById('editRole').value;
        const notes = document.getElementById('editNotes').value;

        fetch(`/admin/user/${id}`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ fullName, email, phoneNumber, companyName, serviceInterest, projectDescription, role, notes })
        })
        .then(res => res.json())
        .then(data => {
          document.getElementById('editUserModal').style.display = 'none';
          userIdToEdit = null;
          if (data.success) {
            location.reload();
          } else {
            alert('Failed to update user.');
          }
        })
        .catch(() => {
          document.getElementById('editUserModal').style.display = 'none';
          userIdToEdit = null;
          alert('Failed to update user.');
        });
      };
    }

    const resetPasswordBtn = document.getElementById('resetPasswordBtn');
    if (resetPasswordBtn) {
      resetPasswordBtn.onclick = function() {
        const id = document.getElementById('editUserId').value;
        if (!id) return;
        if (confirm('Send a password reset email to this user?')) {
          fetch(`/admin/user/${id}/reset-password`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
          })
          .then(res => res.json())
          .then(data => {
            if (data.success) {
              alert('Password reset email sent.');
            } else {
              alert('Failed to send reset email.');
            }
          })
          .catch(() => alert('Failed to send reset email.'));
        }
      };
    }

    let appointmentIdToCancel = null;

    // Complete Appointment
    document.querySelectorAll('.complete-user-btn').forEach(btn => {
      btn.addEventListener('click', function() {
        const appointmentId = this.getAttribute('data-id');
        const row = this.closest('tr');
        fetch(`/admin/appointment/${appointmentId}/status`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ status: 'completed' })
        })
        .then(res => res.json())
        .then(data => {
          if (data.success) {
            // Animation: show checkmark
            const icon = this.querySelector('i');
            if (icon) {
              icon.className = 'fas fa-check-circle';
              icon.style.color = '#27ae60';
              this.disabled = true;
            }
            // Fade out the row
            if (row) {
              row.classList.add('slide-fade-out');
              setTimeout(() => row.remove(), 550);
            }
          } else {
            alert('Failed to complete appointment.');
          }
        })
        .catch(() => alert('Failed to complete appointment.'));
      });
    });

    // Cancel Appointment
    document.querySelectorAll('.cancel-user-btn').forEach(btn => {
      btn.addEventListener('click', function() {
        appointmentIdToCancel = this.getAttribute('data-id');
        document.getElementById('cancelUserModal').style.display = 'flex';
      });
    });

    document.getElementById('cancelCancelUser').onclick = function() {
      document.getElementById('cancelUserModal').style.display = 'none';
      appointmentIdToCancel = null;
    };

    document.getElementById('confirmCancelUser').onclick = function() {
      if (!appointmentIdToCancel) return;
      const btn = document.querySelector(`.cancel-user-btn[data-id="${appointmentIdToCancel}"]`);
      const row = btn ? btn.closest('tr') : null;
      fetch(`/admin/appointment/${appointmentIdToCancel}/status`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ status: 'cancelled' })
      })
      .then(res => res.json())
      .then(data => {
        document.getElementById('cancelUserModal').style.display = 'none';
        if (data.success) {
          // Animation: show X
          if (btn) {
            const icon = btn.querySelector('i');
            if (icon) {
              icon.className = 'fas fa-times-circle';
              icon.style.color = '#e74c3c';
              btn.disabled = true;
            }
          }
          // Fade out the row
          if (row) {
            row.classList.add('slide-fade-out');
            setTimeout(() => row.remove(), 550);
          }
        } else {
          alert('Failed to cancel appointment.');
        }
        appointmentIdToCancel = null;
      })
      .catch(() => {
        document.getElementById('cancelUserModal').style.display = 'none';
        appointmentIdToCancel = null;
        alert('Failed to cancel appointment.');
      });
    };
  </script>
</body>
</html>
